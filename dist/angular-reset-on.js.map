{"version":3,"names":[],"mappings":"","sources":["angular-reset-on.js"],"sourcesContent":["/**\r\n * \"Reset on\" directive for Angular 2.0\r\n * \r\n * Resets to its initial value (or clean) a field when a given scope condition is true\r\n *\r\n * @author  Waldir Pereira <waldirpereira@gmail.com>\r\n * https://github.com/waldirpereira/angular-reset-on\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('ng-reset-on', [])\r\n        .directive(\"ngResetOn\", [\"$timeout\", ResetOn]);\r\n\r\n    function ResetOn($timeout) {\r\n        return {\r\n            restrict: 'A',\r\n            require: 'ngModel',\r\n            link: function ($scope, element, attrs, ngModelCtrl) {\r\n              var initialValue;\r\n              \r\n              $timeout(function() {\r\n                initialValue = (attrs.value || ngModelCtrl.$modelValue || ngModelCtrl.$viewValue);\r\n\t\t\t\tconsole.log(\"_______________initialValue = \" + initialValue);\r\n              });\r\n              \r\n              var mode = attrs.mode || \"clean\";\r\n              if (mode !== \"clean\" && mode !== \"reset\")\r\n                throw(\"ng-reset-on error: mode must be 'clean' or 'reset'\");\r\n            \r\n              $scope.$watch(attrs.ngResetOn, function () {\r\n                if (!$scope.$eval(attrs.ngResetOn)) \r\n                  return;\r\n\r\n                mode = attrs.mode || \"clean\";\r\n                if (mode !== \"clean\" && mode !== \"reset\")\r\n                  throw(\"ng-reset-on error: mode must be 'clean' or 'reset'\");\r\n                \r\n                var resetValue;\r\n                if (mode === \"reset\")\r\n                  resetValue = initialValue;\r\n\t\t\t  console.log(\"_______________________________resetValue = \" + resetValue);\r\n                \r\n                if (!ngModelCtrl.$modelValue && typeof(ngModelCtrl.$modelValue) !== \"boolean\" && mode === \"clean\")\r\n                    return;\r\n\r\n                if (Array.isArray(ngModelCtrl.$modelValue)) {\r\n                  \r\n                  //specific treatment for multiple uiSelect\r\n                  var uiSelect = element.controller('uiSelect');\r\n                  if (uiSelect && uiSelect.multiple) {\r\n                    if (resetValue) {\r\n                      uiSelect.selected.length = 0;\r\n                      resetValue.forEach(function(val){\r\n                        uiSelect.selected.push(val);\r\n                      });\r\n                    }\r\n                    else\r\n                      uiSelect.selected.length = 0;\r\n                  }\r\n                  \r\n                  if (resetValue)\r\n                    ngModelCtrl.$setViewValue(resetValue);\r\n                  else\r\n                    ngModelCtrl.$modelValue.length = 0;\r\n                } else {\r\n                  ngModelCtrl.$setViewValue(resetValue);\r\n                }\r\n                \r\n                ngModelCtrl.$render();\r\n              });\r\n            }\r\n        };\r\n    }\r\n})();"],"file":"angular-reset-on.js"}